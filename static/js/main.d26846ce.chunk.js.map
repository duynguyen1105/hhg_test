{"version":3,"sources":["components/Counter.tsx","utils/apiCaller.ts","constants/Config.ts","components/common/ConfirmDialog.tsx","components/common/Loading.tsx","components/common/Notification.tsx","components/FormDialog.tsx","components/common/TablePaginationActions.tsx","components/EmployeeTable.tsx","components/MainPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Counter","useState","count","setCount","Container","style","textAlign","Typography","variant","color","ButtonGroup","Button","onClick","x","apiCaller","endpoint","method","body","a","axios","data","res","console","error","useStyles","makeStyles","theme","dialog","padding","spacing","position","top","dialogTitle","dialogContent","dialogAction","justifyContent","titleIcon","palette","secondary","main","cursor","fontSize","ConfirmDialog","props","confirmDialog","setConfirmDialog","classes","Dialog","open","isOpen","paper","DialogTitle","className","IconButton","disabled","DialogContent","title","subTitle","DialogActions","onConfirm","Loading","Box","left","bottom","right","display","alignItems","CircularProgress","root","Notification","notify","setNotify","handleClose","event","reason","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","onClose","Alert","severity","type","message","FormDialog","typeAction","handleAddItem","handleEditItem","id","initialData","firstname","lastname","email","initialIsError","dataEmployee","setDataEmployee","errorsMessage","setErrorsMessage","loading","setLoading","isError","setIsError","fetchData","useEffect","onChange","target","value","length","name","validateEmail","test","onSave","preventDefault","JSON","stringify","noValidate","Grid","container","item","xs","TextField","fullWidth","required","label","helperText","width","table","minWidth","TablePaginationActions","useTheme","page","rowsPerPage","onPageChange","direction","Math","ceil","max","StyledTableCell","withStyles","createStyles","head","backgroundColor","common","white","TableCell","StyledTableRow","action","hover","TableRow","EmployeeTable","employeeData","setEmployeeData","setPage","setRowsPerPage","openFormDialog","setOpenFormDialog","typeFormDialog","setTypeFormDialog","idEmployee","setIdEmployee","handleDeleteEmployee","handleShowFormDialog","align","TableContainer","component","Paper","Table","stickyHeader","size","TableHead","TableBody","slice","map","employee","EditOutlined","DeleteForeverOutlined","background","TablePagination","rowsPerPageOptions","newPage","onRowsPerPageChange","parseInt","ActionsComponent","TabPanel","children","index","other","role","hidden","MainPage","React","setValue","AppBar","Toolbar","flexGrow","Tabs","newValue","Tab","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d26846ce.chunk.js","sourcesContent":["import { Button, ButtonGroup, Container, Typography } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\n\nconst Counter = () => {\n  const [count, setCount] = useState(0);\n  const handleIncrease = () => {\n    setCount((x) => x + 1);\n  };\n  const handleReset = () => {\n    setCount(0);\n  };\n  return (\n    <Container style={{ textAlign: \"center\" }}>\n      <br />\n      <Typography variant=\"h3\" style={{ color: \"#4d7cc1\" }}>\n        Counter: {count}\n      </Typography>\n      <br />\n      <ButtonGroup>\n        <Button variant=\"outlined\" color=\"primary\" onClick={handleIncrease}>\n          Increase\n        </Button>\n        <Button variant=\"outlined\" color=\"secondary\" onClick={handleReset}>\n          Reset\n        </Button>\n      </ButtonGroup>\n    </Container>\n  );\n};\n\nexport default Counter;\n","import * as Config from \"../constants/Config\";\nimport axios from \"axios\";\n\n\nconst apiCaller = async (endpoint: string, method: any, body?: any) => {\n  try {\n    const res = await axios(`${Config.API_URL}/${endpoint}`, {\n        method: method,\n        data: body\n    });\n    return res;\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nexport default apiCaller;\n","export const API_URL:string = 'https://60f79f139cdca00017454f06.mockapi.io/api/Employees' ;","import {\n  Button,\n  ButtonGroup,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  IconButton,\n  makeStyles,\n  Typography,\n} from \"@material-ui/core\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  dialog: {\n    padding: theme.spacing(2),\n    position: \"absolute\",\n    top: theme.spacing(10),\n  },\n  dialogTitle: {\n    textAlign: \"center\",\n  },\n  dialogContent: {\n    textAlign: \"center\",\n  },\n  dialogAction: {\n    justifyContent: \"center\",\n  },\n  titleIcon: {\n    color: theme.palette.secondary.main,\n    \"&:hover\": {\n      cursor: \"default\",\n    },\n    \"& .MuiSvgIcon-root\": {\n      fontSize: \"8rem\",\n    },\n  },\n}));\n\nexport default function ConfirmDialog(props: any) {\n  const { confirmDialog, setConfirmDialog } = props;\n  const classes = useStyles();\n\n  return (\n    <Dialog open={confirmDialog.isOpen} classes={{ paper: classes.dialog }}>\n      <DialogTitle className={classes.dialogTitle}>\n        <IconButton disabled className={classes.titleIcon}>\n          <WarningIcon className={classes.titleIcon} />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent className={classes.dialogContent}>\n        <Typography variant=\"h6\">{confirmDialog.title}</Typography>\n        <Typography variant=\"subtitle2\">{confirmDialog.subTitle}</Typography>\n      </DialogContent>\n      <DialogActions className={classes.dialogAction}>\n        <ButtonGroup>\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            onClick={confirmDialog.onConfirm}\n          >\n            Yes\n          </Button>\n          <Button\n            variant=\"outlined\"\n            color=\"secondary\"\n            onClick={() =>\n              setConfirmDialog({ ...confirmDialog, isOpen: false })\n            }\n          >\n            No\n          </Button>\n        </ButtonGroup>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React from \"react\";\nimport { Box, CircularProgress } from \"@material-ui/core\";\n\nconst Loading = () => (\n  <Box\n    top={0}\n    left={0}\n    bottom={0}\n    right={0}\n    position=\"absolute\"\n    display=\"flex\"\n    alignItems=\"center\"\n    justifyContent=\"center\"\n  >\n    <CircularProgress />\n  </Box>\n);\n\nexport default Loading;\n","import React from \"react\";\nimport { Snackbar, makeStyles } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    top: theme.spacing(9),\n  },\n}));\n\nexport default function Notification(props: any) {\n  const { notify, setNotify } = props;\n  const classes = useStyles();\n\n  const handleClose = (event: any, reason: any): any => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setNotify({\n      ...notify,\n      isOpen: false,\n    });\n  };\n\n  return (\n    <Snackbar\n      className={classes.root}\n      open={notify.isOpen}\n      autoHideDuration={2000}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      onClose={handleClose}\n    >\n      <Alert severity={notify.type} onClose={() => handleClose}>\n        {notify.message}\n      </Alert>\n    </Snackbar>\n  );\n}\n","import { ButtonGroup, Grid, Typography } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextField from \"@material-ui/core/TextField\";\nimport React, { useEffect, useState } from \"react\";\nimport apiCaller from \"../utils/apiCaller\";\nimport Loading from \"./common/Loading\";\n\nexport default function FormDialog(props: any) {\n  const {\n    typeAction,\n    open,\n    handleClose,\n    handleAddItem,\n    handleEditItem,\n    id = \"\",\n  } = props;\n\n  const initialData = {\n    firstname: \"\",\n    lastname: \"\",\n    email: \"\",\n    position: \"\",\n  };\n\n  const initialIsError = {\n    firstname: false,\n    lastname: false,\n    email: false,\n    position: false,\n  };\n\n  const [dataEmployee, setDataEmployee] = useState<any>(initialData);\n  const [errorsMessage, setErrorsMessage] = useState({\n    firstname: \"\",\n    lastname: \"\",\n    email: \"\",\n    position: \"\",\n  });\n\n  const [loading, setLoading] = useState(true);\n\n  const [isError, setIsError] = useState(initialIsError);\n\n  const fetchData = async () => {\n    setDataEmployee(initialData);\n    if (typeAction === \"edit\") {\n      setLoading(true);\n      const data = await apiCaller(`/${id}`, \"get\", null);\n      setDataEmployee(data?.data);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [id]);\n\n  const onChange = async (event: any) => {\n    if (event.target.value.length === 0) {\n      setIsError({ ...isError, [event.target.name]: true });\n      setErrorsMessage({\n        ...errorsMessage,\n        [event.target.name]: \"This field is required!\",\n      });\n    } else {\n      setIsError({ ...isError, [event.target.name]: false });\n      setErrorsMessage({ ...errorsMessage, [event.target.name]: \"\" });\n    }\n\n    if (event.target.name === \"email\") {\n      if (!validateEmail(event.target.value)) {\n        setIsError({ ...isError, email: true });\n        setErrorsMessage({ ...errorsMessage, email: \"Invalid email!\" });\n      } else {\n        setIsError({ ...isError, [event.target.name]: false });\n        setErrorsMessage({ ...errorsMessage, [event.target.name]: \"\" });\n      }\n    }\n\n    setDataEmployee({\n      ...dataEmployee,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const validateEmail = (email: string) => {\n    const re =\n      /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  };\n\n  const onSave = async (event: any) => {\n    event.preventDefault();\n    if (JSON.stringify(isError) === JSON.stringify(initialIsError)) {\n      handleClose();\n      typeAction === \"add\"\n        ? await handleAddItem(dataEmployee)\n        : await handleEditItem(dataEmployee, id);\n      setDataEmployee(initialData);\n      fetchData();\n      setIsError(initialIsError);\n    }\n  };\n\n  const onClose = () => {\n    handleClose();\n    setErrorsMessage({\n      firstname: \"\",\n      lastname: \"\",\n      email: \"\",\n      position: \"\",\n    });\n  };\n\n  return (\n    <Dialog open={open} onClose={onClose} aria-labelledby=\"form-dialog-title\">\n      <form noValidate>\n        <DialogTitle id=\"form-dialog-title\">\n          <Typography variant=\"h5\" style={{ color: \"#4d7cc1\" }}>\n            {typeAction === \"add\" ? \"Add new employee\" : \"Edit employee\"}\n          </Typography>\n        </DialogTitle>\n        <DialogContent>\n          {loading && <Loading />}\n\n          <Grid container alignItems=\"flex-start\" spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                required\n                name=\"firstname\"\n                type=\"text\"\n                label=\"First Name\"\n                value={dataEmployee.firstname}\n                onChange={onChange}\n                error={isError.firstname}\n                helperText={errorsMessage.firstname}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                required\n                name=\"lastname\"\n                type=\"text\"\n                label=\"Last Name\"\n                value={dataEmployee.lastname}\n                onChange={onChange}\n                error={isError.lastname}\n                helperText={errorsMessage.lastname}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                name=\"email\"\n                fullWidth\n                required\n                type=\"email\"\n                label=\"Email\"\n                value={dataEmployee.email}\n                onChange={onChange}\n                error={isError.email}\n                helperText={errorsMessage.email}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                required\n                name=\"position\"\n                type=\"text\"\n                label=\"Position\"\n                value={dataEmployee.position}\n                onChange={onChange}\n                error={isError.position}\n                helperText={errorsMessage.position}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <ButtonGroup>\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              onClick={onSave}\n              type=\"submit\"\n            >\n              Submit\n            </Button>\n            <Button variant=\"outlined\" color=\"secondary\" onClick={onClose}>\n              Cancel\n            </Button>\n          </ButtonGroup>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n}\n","import IconButton from \"@material-ui/core/IconButton\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\nimport React from \"react\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n  },\n  table: {\n    minWidth: 700,\n  },\n});\n\ninterface TablePaginationActionsProps {\n  count: number;\n  page: number;\n  rowsPerPage: number;\n  onPageChange: (\n    event: React.MouseEvent<HTMLButtonElement>,\n    newPage: number\n  ) => void;\n}\n\nfunction TablePaginationActions(props: TablePaginationActionsProps) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onPageChange } = props;\n  const handleFirstPageButtonClick = (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => {\n    onPageChange(event, 0);\n  };\n  const handleBackButtonClick = (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => {\n    onPageChange(event, page - 1);\n  };\n  const handleNextButtonClick = (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => {\n    onPageChange(event, page + 1);\n  };\n  const handleLastPageButtonClick = (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => {\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowRight />\n        ) : (\n          <KeyboardArrowLeft />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowLeft />\n        ) : (\n          <KeyboardArrowRight />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nexport default TablePaginationActions;\n","import { Button, ButtonGroup, Container, Typography } from \"@material-ui/core\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { createStyles, Theme, withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { DeleteForeverOutlined, EditOutlined } from \"@material-ui/icons\";\nimport React, { useEffect, useState } from \"react\";\nimport apiCaller from \"../utils/apiCaller\";\nimport ConfirmDialog from \"./common/ConfirmDialog\";\nimport Loading from \"./common/Loading\";\nimport Notification from \"./common/Notification\";\nimport FormDialog from \"./FormDialog\";\nimport TablePaginationActions from \"./common/TablePaginationActions\";\n\nconst StyledTableCell = withStyles((theme: Theme) =>\n  createStyles({\n    head: {\n      backgroundColor: \"#4f9ed5\",\n      color: theme.palette.common.white,\n    },\n    body: {\n      fontSize: 14,\n    },\n  })\n)(TableCell);\n\nconst StyledTableRow = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      \"&:nth-of-type(odd)\": {\n        backgroundColor: theme.palette.action.hover,\n      },\n    },\n  })\n)(TableRow);\n\nexport default function EmployeeTable() {\n  const [employeeData, setEmployeeData] = useState<any[]>([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [loading, setLoading] = useState(true);\n  const [openFormDialog, setOpenFormDialog] = useState(false);\n  const [typeFormDialog, setTypeFormDialog] = useState<string>();\n  const [idEmployee, setIdEmployee] = useState<string>();\n  const [notify, setNotify] = useState({\n    isOpen: false,\n    message: \"\",\n    type: \"\",\n  });\n  const [confirmDialog, setConfirmDialog] = useState({\n    isOpen: false,\n    title: \"\",\n    subTitle: \"\",\n    onConfirm: () => {},\n  });\n\n  const handleChangePage = (\n    event: React.MouseEvent<HTMLButtonElement> | null,\n    newPage: number\n  ) => {\n    setPage(newPage);\n  };\n\n  const fetchData = async () => {\n    const employeeData = await apiCaller(\"/\", \"get\", null);\n    setEmployeeData(employeeData?.data);\n    setLoading(false);\n  };\n\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleCloseFormDialog = () => {\n    setOpenFormDialog(false);\n  };\n\n  const handleDeleteEmployee = async (id: any) => {\n    setConfirmDialog({\n      ...confirmDialog,\n      isOpen: false,\n    });\n    setEmployeeData([]);\n    setLoading(true);\n    await apiCaller(`/${id}`, \"delete\", null);\n    await fetchData();\n    setNotify({\n      isOpen: true,\n      message: \"Deleted Successfully\",\n      type: \"error\",\n    });\n  };\n\n  const handleAddItem = async (data: any) => {\n    setEmployeeData([]);\n    setLoading(true);\n    await apiCaller(\"/\", \"post\", data);\n    await fetchData();\n    setNotify({\n      isOpen: true,\n      message: \"Added Successfully\",\n      type: \"success\",\n    });\n  };\n\n  const handleEditItem = async (data: any, id: string) => {\n    setEmployeeData([]);\n    setLoading(true);\n    await apiCaller(`/${id}`, \"put\", data);\n    await fetchData();\n    setNotify({\n      isOpen: true,\n      message: \"Edited Successfully\",\n      type: \"success\",\n    });\n  };\n\n  const handleShowFormDialog = (type: string, id?: string) => {\n    setOpenFormDialog(true);\n    setTypeFormDialog(type);\n    setIdEmployee(id);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <Container>\n      <br />\n      <FormDialog\n        typeAction={typeFormDialog}\n        open={openFormDialog}\n        handleClose={handleCloseFormDialog}\n        handleAddItem={(data: any) => handleAddItem(data)}\n        handleEditItem={(data: any, id: string) => handleEditItem(data, id)}\n        id={idEmployee}\n      />\n      <Typography variant=\"h3\" align=\"center\" style={{ color: \"#4d7cc1\" }}>\n        Employee List\n      </Typography>\n      <br />\n      <TableContainer component={Paper}>\n        <Table stickyHeader={true} size=\"medium\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell align=\"center\">First Name</StyledTableCell>\n              <StyledTableCell align=\"center\">Last Name</StyledTableCell>\n              <StyledTableCell align=\"center\">Email</StyledTableCell>\n              <StyledTableCell align=\"center\">Position</StyledTableCell>\n              <StyledTableCell align=\"center\">Action</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {loading && <Loading />}\n            {(rowsPerPage > 0\n              ? employeeData.slice(\n                  page * rowsPerPage,\n                  page * rowsPerPage + rowsPerPage\n                )\n              : employeeData\n            ).map((employee) => (\n              <StyledTableRow key={employee.id}>\n                <StyledTableCell align=\"center\">\n                  {employee.firstname}\n                </StyledTableCell>\n                <StyledTableCell align=\"center\">\n                  {employee.lastname}\n                </StyledTableCell>\n                <StyledTableCell align=\"center\">\n                  {employee.email}\n                </StyledTableCell>\n                <StyledTableCell align=\"center\">\n                  {employee.position}\n                </StyledTableCell>\n                <StyledTableCell align=\"center\">\n                  <ButtonGroup>\n                    <Button\n                      variant=\"outlined\"\n                      color=\"primary\"\n                      onClick={() => handleShowFormDialog(\"edit\", employee.id)}\n                      // style={{ paddingRight: 0 }}\n                    >\n                      {/* Edit */}\n                      <EditOutlined />\n                    </Button>\n                    <Button\n                      variant=\"outlined\"\n                      color=\"secondary\"\n                      // style={{ paddingLeft: 0 }}\n                      onClick={() =>\n                        setConfirmDialog({\n                          isOpen: true,\n                          title: \"Are you sure to delete this employee?\",\n                          subTitle: \"You can't undo this action\",\n                          onConfirm: () => {\n                            handleDeleteEmployee(employee.id);\n                          },\n                        })\n                      }\n                    >\n                      <DeleteForeverOutlined />\n                      {/* Delete */}\n                    </Button>\n                  </ButtonGroup>\n                </StyledTableCell>\n              </StyledTableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <Button\n        variant=\"contained\"\n        style={{ background: \"#4f9ed5\", color: \"white\" }}\n        onClick={() => handleShowFormDialog(\"add\")}\n      >\n        New Employee\n      </Button>\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 25]}\n        component=\"div\"\n        count={employeeData.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n        ActionsComponent={TablePaginationActions}\n      />\n      <Notification notify={notify} setNotify={setNotify} />\n      <ConfirmDialog\n        confirmDialog={confirmDialog}\n        setConfirmDialog={setConfirmDialog}\n      />\n    </Container>\n  );\n}\n","import { AppBar, Toolbar } from \"@material-ui/core\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\nimport Counter from \"./Counter\";\nimport EmployeeTable from \"./EmployeeTable\";\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: any;\n  value: any;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      {...other}\n    >\n      {value === 0 ? <Counter /> : <EmployeeTable />}\n    </div>\n  );\n}\n\nexport default function MainPage() {\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div>\n      <AppBar position=\"static\" style={{ background: \"#1976d2\" }}>\n        <Toolbar>\n          <Typography variant=\"h6\" align=\"center\" style={{ flexGrow: 2 }}>\n            Hello Health Group\n          </Typography>\n          <Tabs\n            value={value}\n            onChange={handleChange}\n            aria-label=\"Vertical tabs example\"\n            style={{ flexGrow: 3 }}\n          >\n            <Tab label=\"Counter\" />\n            <Tab label=\"Employees Table\" />\n          </Tabs>\n        </Toolbar>\n      </AppBar>\n      <TabPanel value={value} index={0} />\n      <TabPanel value={value} index={1} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport MainPage from \"./components/MainPage\";\n\nconst App = () => {\n  return <MainPage/>;\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}